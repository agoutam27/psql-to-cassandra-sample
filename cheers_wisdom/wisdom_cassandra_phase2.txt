CREATE TABLE wisdom_users.user_relationship (
    from_user text,
    to_user text,
    realtionship_status text,
    visibility_status text,
    "isDeleted" boolean,
    "isUpdated" boolean,
    date_created timestamp,
    PRIMARY KEY ("from_user", "to_user")
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX elastic_user_relationship_idx ON wisdom_users.user_relationship () USING 'org.elassandra.index.ExtendedElasticSecondaryIndex';


CREATE TABLE wisdom_users.block (
    from_user text,
    to_user text,
    date_created timestamp,
    "isDeleted" boolean,
    PRIMARY KEY ("from_user", "to_user")
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX elastic_block_idx ON wisdom_users.block () USING 'org.elassandra.index.ExtendedElasticSecondaryIndex';


CREATE TABLE wisdom_users.friend_request (
    from_user text,
    to_user text,
    request_status text,
    action_date timestamp,
    viewed_date timestamp,
    date_created timestamp,
    PRIMARY KEY ("from_user", "to_user")
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX elastic_friend_request_idx ON wisdom_users.friend_request () USING 'org.elassandra.index.ExtendedElasticSecondaryIndex';


CREATE TABLE wisdom_users.follow (
    from_user text,
    to_user text,
    date_created timestamp,
    "isDeleted" boolean,
    PRIMARY KEY ("from_user", "to_user")
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX elastic_follow_idx ON wisdom_users.follow () USING 'org.elassandra.index.ExtendedElasticSecondaryIndex';


CREATE TABLE wisdom_users.hifi (
    from_user text,
    to_user text,
    date_created timestamp,
    "isDeleted" boolean,
    PRIMARY KEY ("from_user", "to_user")
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX elastic_hifi_idx ON wisdom_users.hifi () USING 'org.elassandra.index.ExtendedElasticSecondaryIndex';


// Dummy data

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user1', 'user2', '1999-01-01', false);

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user1', 'user3', '2004-01-04', false);

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user4', 'user5', '2009-11-11', false);

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user4', 'user6', '2011-12-01', false);

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user4', 'user7', '2016-07-11', false);

INSERT INTO wisdom_users.block (from_user, to_user, date_created, "isDeleted")
VALUES('user7', 'user4', '2016-07-11', false);


INSERT INTO wisdom_users.friend_request (from_user, to_user, request_status, date_created)
VALUES('user2', 'user3', 'Pending', '2016-07-11');

INSERT INTO wisdom_users.friend_request (from_user, to_user, request_status, date_created)
VALUES('user2', 'user5', 'Pending', '2016-07-11');

INSERT INTO wisdom_users.friend_request (from_user, to_user, request_status, date_created)
VALUES('user2', 'user6', 'Pending', '2016-07-11');

INSERT INTO wisdom_users.friend_request (from_user, to_user, request_status, date_created)
VALUES('user2', 'user7', 'Pending', '2016-07-11');

INSERT INTO wisdom_users.friend_request (from_user, to_user, request_status, date_created)
VALUES('user1', 'user2', 'Pending', '2016-07-11');


UPDATE wisdom_users.friend_request SET viewed_date = toTimestamp(now()) WHERE from_user = 'user2' AND to_user = 'user5';
UPDATE wisdom_users.friend_request SET request_status = 'Accepted', action_date = toTimestamp(now()) WHERE from_user = 'user2' AND to_user = 'user5';


UPDATE wisdom_users.friend_request SET request_status = 'Accepted', action_date = toTimestamp(now()) WHERE from_user = 'user1' AND to_user = 'user2';

UPDATE wisdom_users.friend_request SET viewed_date = toTimestamp(now()) WHERE from_user = 'user2' AND to_user = 'user4';
UPDATE wisdom_users.friend_request SET request_status = 'Rejected', action_date = toTimestamp(now()) WHERE from_user = 'user2' AND to_user = 'user4';
